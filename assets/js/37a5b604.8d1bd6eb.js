"use strict";(self.webpackChunkwebsite_new=self.webpackChunkwebsite_new||[]).push([[4394],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),s=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,m=u["".concat(l,".").concat(d)]||u[d]||f[d]||o;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[u]="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6898:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>f,frontMatter:()=>o,metadata:()=>c,toc:()=>s});var a=n(7462),r=(n(7294),n(3905));const o={layout:"docs",title:"Functional Abstraction",section:"chisel3"},i="Functional Abstraction",c={unversionedId:"explanations/functional-abstraction",id:"explanations/functional-abstraction",title:"Functional Abstraction",description:"We can define functions to factor out a repeated piece of logic that",source:"@site/docs/explanations/functional-abstraction.md",sourceDirName:"explanations",slug:"/explanations/functional-abstraction",permalink:"/chisel/docs/explanations/functional-abstraction",draft:!1,editUrl:"https://github.com/chipsalliance/chisel/tree/main/docs/src/explanations/functional-abstraction.md",tags:[],version:"current",frontMatter:{layout:"docs",title:"Functional Abstraction",section:"chisel3"},sidebar:"tutorialSidebar",previous:{title:"Decoders",permalink:"/chisel/docs/explanations/decoder"},next:{title:"Functional Module Creation",permalink:"/chisel/docs/explanations/functional-module-creation"}},l={},s=[],p={toc:s},u="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"functional-abstraction"},"Functional Abstraction"),(0,r.kt)("p",null,"We can define functions to factor out a repeated piece of logic that\nwe later reuse multiple times in a design.  For example, we can wrap\nup our earlier example of a simple combinational logic block as\nfollows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala"},"def clb(a: UInt, b: UInt, c: UInt, d: UInt): UInt =\n  (a & b) | (~c & d)\n")),(0,r.kt)("p",null,"where ",(0,r.kt)("inlineCode",{parentName:"p"},"clb")," is the function which takes ",(0,r.kt)("inlineCode",{parentName:"p"},"a"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"b"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"c"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"d")," as arguments and returns a wire to the output of a\nboolean circuit.  The ",(0,r.kt)("inlineCode",{parentName:"p"},"def")," keyword is part of Scala and\nintroduces a function definition, with each argument followed by a colon then\nits type, and the function return type given after the colon following the\nargument list.  The equals (",(0,r.kt)("inlineCode",{parentName:"p"},"="),") sign separates the function argument list\nfrom the function definition."),(0,r.kt)("p",null,"We can then use the block in another circuit as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-scala",metastring:"mdoc:silent","mdoc:silent":!0},"val out = clb(a,b,c,d)\n")))}f.isMDXComponent=!0}}]);