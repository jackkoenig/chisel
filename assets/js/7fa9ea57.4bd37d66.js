"use strict";(self.webpackChunkwebsite_new=self.webpackChunkwebsite_new||[]).push([[5041],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7871:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={layout:"docs",title:"Ports",section:"chisel3"},i="Ports",s={unversionedId:"explanations/ports",id:"explanations/ports",title:"Ports",description:"Ports are used as interfaces to hardware components.  A port is simply",source:"@site/docs/explanations/ports.md",sourceDirName:"explanations",slug:"/explanations/ports",permalink:"/chisel/docs/explanations/ports",draft:!1,editUrl:"https://github.com/chipsalliance/chisel/tree/main/docs/src/explanations/ports.md",tags:[],version:"current",frontMatter:{layout:"docs",title:"Ports",section:"chisel3"},sidebar:"tutorialSidebar",previous:{title:"Polymorphism and Parameterization",permalink:"/chisel/docs/explanations/polymorphism-and-parameterization"},next:{title:"Printing",permalink:"/chisel/docs/explanations/printing"}},l={},p=[{value:"Inspecting Module ports",id:"inspecting-module-ports",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ports"},"Ports"),(0,o.kt)("p",null,"Ports are used as interfaces to hardware components.  A port is simply\nany ",(0,o.kt)("inlineCode",{parentName:"p"},"Data")," object that has directions assigned to its members."),(0,o.kt)("p",null,"Chisel provides port constructors to allow a direction to be added\n(input or output) to an object at construction time. Primitive port\nconstructors wrap the type of the port in ",(0,o.kt)("inlineCode",{parentName:"p"},"Input")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"Output"),"."),(0,o.kt)("p",null,"An example port declaration is as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},"class Decoupled extends Bundle {\n  val ready = Output(Bool())\n  val data  = Input(UInt(32.W))\n  val valid = Input(Bool())\n}\n")),(0,o.kt)("p",null,"After defining ",(0,o.kt)("inlineCode",{parentName:"p"},"Decoupled"),", it becomes a new type that can be\nused as needed for module interfaces or for named collections of\nwires."),(0,o.kt)("p",null,"By folding directions into the object declarations, Chisel is able to\nprovide powerful wiring constructs described later."),(0,o.kt)("h2",{id:"inspecting-module-ports"},"Inspecting Module ports"),(0,o.kt)("p",null,"(Chisel 3.2+)"),(0,o.kt)("p",null,"Chisel 3.2 introduced ",(0,o.kt)("inlineCode",{parentName:"p"},"DataMirror.modulePorts")," which can be used to inspect the IOs of any Chisel module (this includes modules in both ",(0,o.kt)("inlineCode",{parentName:"p"},"import chisel3._")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"import Chisel._"),", as well as BlackBoxes from each package).\nHere is an example of how to use this API:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-scala"},'import chisel3.reflect.DataMirror\nimport chisel3.stage.ChiselGeneratorAnnotation\nimport circt.stage.ChiselStage\n\nclass Adder extends Module {\n  val a = IO(Input(UInt(8.W)))\n  val b = IO(Input(UInt(8.W)))\n  val c = IO(Output(UInt(8.W)))\n  c := a +& b\n}\n\nclass Test extends Module {\n  val adder = Module(new Adder)\n  // for debug only\n  adder.a := DontCare\n  adder.b := DontCare\n\n  // Inspect ports of adder\n  // See the result below.\n   DataMirror.modulePorts(adder).foreach { case (name, port) => {\n    println(s"Found port $name: $port")\n  }}\n}\n\nChiselStage.emitSystemVerilog(new Test)\n// Found port clock: Adder.clock: IO[Clock]\n// Found port reset: Adder.reset: IO[Reset]\n// Found port a: Adder.a: IO[UInt<8>]\n// Found port b: Adder.b: IO[UInt<8>]\n// Found port c: Adder.c: IO[UInt<8>]\n// res0: String = """// Generated by CIRCT firtool-1.56.0\n// module Test( // <stdin>:13:3\n//   input clock,   // <stdin>:14:11\n//         reset    // <stdin>:15:11\n// );\n// \n// endmodule\n// \n// """\n')))}u.isMDXComponent=!0}}]);